[  {    "type": "post",    "url": "/issues",    "title": "Créer un problème",    "name": "CreateIssues",    "group": "Probleme",    "version": "1.0.0",    "description": "<p>Enregistrer un nouveau problème</p>",    "success": {      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>L'identifiant unique pour les problèmes est géré par le serveur</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Le statut du problème (ne peut être qu'une de ces quatres valeurs)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>Une description est demandée pour décrire le problème</p>"          },          {            "group": "Response body",            "type": "String",            "optional": true,            "field": "imageUrl",            "description": "<p>L'URL d'une photo du problème</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "latitude",            "description": "<p>L'atitude de la location du problème</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "longitude",            "description": "<p>La longitude de la location du problème</p>"          },          {            "group": "Response body",            "type": "String",            "optional": true,            "field": "tags",            "description": "<p>Les mots clés, afin de trouver plus facilement le type de problème</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "createdBy",            "description": "<p>La personne qui a créé le problème</p>"          },          {            "group": "Response body",            "type": "Date",            "optional": true,            "field": "createdAt",            "description": "<p>La date où le problème a été identifié</p>"          },          {            "group": "Response body",            "type": "Date",            "optional": true,            "field": "updatedAt",            "description": "<p>La date de modification</p>"          },          {            "group": "Response body",            "type": "String",            "optional": true,            "field": "updatedBy",            "description": "<p>La personne qui a modifié le statut</p>"          }        ]      },      "examples": [        {          "title": "201 Created",          "content": "HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: https://evening-meadow-25867.herokuapp.com/api/issues/58b2926f5e1def0789e97281\n\n{\n\n     \"__v\": 0,\n     \"status\": \"new\",\n     \"description\": \"Dupo\",\n     \"imageUrl\": \"citizen\",\n     \"latitude\": -10,\n     \"longitude\": 10,\n     \"_id\": \"58b58b9240e6e957f8f1a146\",\n     \"createdAt\": \"2017-02-28T14:39:14.588Z\",\n     \"tags\": [\n       \"hiboux\"\n     ]\n}",          "type": "json"        }      ]    },    "examples": [      {        "title": "Example",        "content": "    POST /issues HTTP/1.1\n    Content-Type: application/json\n\n    {\n\t       \"status\":\"new\",\n\t       \"description\": \"Dupo\",\n\t       \"imageUrl\": \"http://hvdseigneuries.com/wp-content/uploads/2009/02/trouverchatonrect-fb-56e15ff28c6fc.jpg\",\n\t       \"latitude\": \"-10\",\n\t       \"longitude\": \"10\",\n\t       \"tags\": \"hiboux\"\n    }",        "type": "json"      }    ],    "filename": "routes/issues.js",    "groupTitle": "Probleme",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "allowedValues": [              "\"new\"",              "\"inProgress\"",              "\"canceled\"",              "\"completed\""            ],            "optional": false,            "field": "status",            "description": "<p>Le statut du problème (ne peut être qu'une de ces quatres valeurs)</p>"          },          {            "group": "Request body",            "type": "Number",            "size": "-90..90",            "optional": false,            "field": "latitude",            "description": "<p>L'atitude de la location du problème</p>"          },          {            "group": "Request body",            "type": "Number",            "size": "-180..180",            "optional": false,            "field": "longitude",            "description": "<p>La longitude de la location du problème</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "422/UnprocessableEntity",            "description": "<p>Certaines propriétés de problème sont invalides.</p>"          }        ]      },      "examples": [        {          "title": "422 Unprocessable Entity",          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"Movie validation failed\",\n  \"errors\": {\n    \"title\": {\n      \"kind\": \"minlength\",\n      \"message\": \"Path `title` (`0`) is shorter than the minimum allowed length (3).\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"title\",\n      \"properties\": {\n        \"message\": \"Path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length (3).\",\n        \"minlength\": 3,\n        \"path\": \"title\",\n        \"type\": \"minlength\",\n        \"value\": \"0\"\n      },\n      \"value\": \"0\"\n    }\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/issues/:id",    "title": "Supprimer un problème",    "name": "DeleteIssue",    "group": "Probleme",    "version": "1.0.0",    "description": "<p>Supprime définitivement le problème</p>",    "examples": [      {        "title": "Example",        "content": "DELETE /issues/58b2926f5e1def0123e97bc0 HTTP/1.1",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "204 No Content",          "content": "HTTP/1.1 204 No Content",          "type": "json"        }      ]    },    "filename": "routes/issues.js",    "groupTitle": "Probleme",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>L'identifiant unique d'un problème</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>Aucun problème n'a été trouvé avec l'ID correspond à l'URL</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": " HTTP/1.1 404 Not Found\n Content-Type: text/plain\n\nAucun problème trouvé avec l'ID: 58b2926f5e1def0123e97281",          "type": "json"        }      ]    }  },  {    "type": "patch",    "url": "/issues/:id",    "title": "Mettre à jour un problème partiellement",    "name": "PartiallyUpdateIssues",    "group": "Probleme",    "version": "1.0.0",    "description": "<p>Met à jour partiellement une donnée de problème (Seul les propriétés déjà existantes seront mise-à-jour) Toutes les propriétés sont optionnelles</p>",    "examples": [      {        "title": "Example",        "content": "PATCH /issues/58b2926f5e1def0123e97281 HTTP/1.1\nContent-Type: application/json\n\n{\n  \"description\": \"description de \"\n}",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n     \"__v\": 0,\n     \"status\": \"new\",\n     \"description\": \"description de\",\n     \"imageUrl\": \"citizen\",\n     \"latitude\": -10,\n     \"longitude\": 10,\n     \"_id\": \"58b58b9240e6e957f8f1a146\",\n     \"createdAt\": \"2017-02-28T14:39:14.588Z\",\n     \"tags\": [\n       \"hiboux\"\n     ]\n}",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Le statut du problème (ne peut être qu'une de ces quatres valeurs)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>Une description est demandée pour décrire le problème</p>"          },          {            "group": "Response body",            "type": "String",            "optional": true,            "field": "imageUrl",            "description": "<p>L'URL d'une photo du problème</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "latitude",            "description": "<p>L'atitude de la location du problème</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "longitude",            "description": "<p>La longitude de la location du problème</p>"          },          {            "group": "Response body",            "type": "String",            "optional": true,            "field": "tags",            "description": "<p>Les mots clés, afin de trouver plus facilement le type de problème</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "createdBy",            "description": "<p>La personne qui a créé le problème</p>"          },          {            "group": "Response body",            "type": "Date",            "optional": true,            "field": "createdAt",            "description": "<p>La date où le problème a été identifié</p>"          },          {            "group": "Response body",            "type": "Date",            "optional": true,            "field": "updatedAt",            "description": "<p>La date de modification</p>"          },          {            "group": "Response body",            "type": "String",            "optional": true,            "field": "updatedBy",            "description": "<p>La personne qui a modifié le statut</p>"          }        ]      }    },    "filename": "routes/issues.js",    "groupTitle": "Probleme",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>L'identifiant unique d'un problème</p>"          }        ],        "Request body": [          {            "group": "Request body",            "type": "String",            "allowedValues": [              "\"new\"",              "\"inProgress\"",              "\"canceled\"",              "\"completed\""            ],            "optional": false,            "field": "status",            "description": "<p>Le statut du problème (ne peut être qu'une de ces quatres valeurs)</p>"          },          {            "group": "Request body",            "type": "Number",            "size": "-90..90",            "optional": false,            "field": "latitude",            "description": "<p>L'atitude de la location du problème</p>"          },          {            "group": "Request body",            "type": "Number",            "size": "-180..180",            "optional": false,            "field": "longitude",            "description": "<p>La longitude de la location du problème</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>Aucun problème n'a été trouvé avec l'ID correspond à l'URL</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "422/UnprocessableEntity",            "description": "<p>Certaines propriétés de problème sont invalides.</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": " HTTP/1.1 404 Not Found\n Content-Type: text/plain\n\nAucun problème trouvé avec l'ID: 58b2926f5e1def0123e97281",          "type": "json"        },        {          "title": "422 Unprocessable Entity",          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"Movie validation failed\",\n  \"errors\": {\n    \"title\": {\n      \"kind\": \"minlength\",\n      \"message\": \"Path `title` (`0`) is shorter than the minimum allowed length (3).\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"title\",\n      \"properties\": {\n        \"message\": \"Path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length (3).\",\n        \"minlength\": 3,\n        \"path\": \"title\",\n        \"type\": \"minlength\",\n        \"value\": \"0\"\n      },\n      \"value\": \"0\"\n    }\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/issues",    "title": "Liste des problèmes",    "name": "RetrieveIssues",    "group": "Probleme",    "version": "1.0.0",    "description": "<p>Renvoi une liste de problème triée par date de création avec une pagination (de la plus vieille à la récente pour traiter les vieux problèmes en premier)</p>",    "examples": [      {        "title": "Example",        "content": "GET /issues?director=58b2926f5e1def0123e97bc0&page=2&pageSize=50 HTTP/1.1",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "    HTTP/1.1 200 OK\n    Content-Type: application/json\n    Link: &lt;https://evening-meadow-25867.herokuapp.com/api/issues?page=1&pageSize=50&gt;; rel=\"first prev\"\n\n    [\n    {\n\t       \"status\":\"new\",\n\t       \"description\": \"Dupo\",\n\t       \"imageUrl\": \"http://hvdseigneuries.com/wp-content/uploads/2009/02/trouverchatonrect-fb-56e15ff28c6fc.jpg\",\n\t       \"latitude\": \"-10\",\n\t       \"longitude\": \"10\",\n\t       \"tags\": \"hiboux\"\n         \"createdAt\": \"2017-02-28T14:39:14.588Z\",\n         \"createdBy\": \"users/58b573bbfb211b515d79b831\"\n    },\n         \"id\": \"58b2926f5e1def0789e97281\",\n         \"status\":\"new\",\n         \"description\": \"Dupo\",\n         \"imageUrl\": \"http://hvdseigneuries.com/wp-content/uploads/2009/02/trouverchatonrect-fb-56e15ff28c6fc.jpg\",\n         \"latitude\": \"-10\",\n         \"longitude\": \"10\",\n         \"tags\": \"hiboux\"\n         \"createdAt\": \"2017-02-28T14:39:14.588Z\",\n         \"createdBy\": \"users/58b573bbfb211b515d79b831\"\n    }\n    ]",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Le statut du problème (ne peut être qu'une de ces quatres valeurs)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>Une description est demandée pour décrire le problème</p>"          },          {            "group": "Response body",            "type": "String",            "optional": true,            "field": "imageUrl",            "description": "<p>L'URL d'une photo du problème</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "latitude",            "description": "<p>L'atitude de la location du problème</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "longitude",            "description": "<p>La longitude de la location du problème</p>"          },          {            "group": "Response body",            "type": "String",            "optional": true,            "field": "tags",            "description": "<p>Les mots clés, afin de trouver plus facilement le type de problème</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "createdBy",            "description": "<p>La personne qui a créé le problème</p>"          },          {            "group": "Response body",            "type": "Date",            "optional": true,            "field": "createdAt",            "description": "<p>La date où le problème a été identifié</p>"          },          {            "group": "Response body",            "type": "Date",            "optional": true,            "field": "updatedAt",            "description": "<p>La date de modification</p>"          },          {            "group": "Response body",            "type": "String",            "optional": true,            "field": "updatedBy",            "description": "<p>La personne qui a modifié le statut</p>"          }        ]      }    },    "filename": "routes/issues.js",    "groupTitle": "Probleme"  },  {    "type": "get",    "url": "/issues/:id",    "title": "Renvoi un problème",    "name": "RetrieveIssues",    "group": "Probleme",    "version": "1.0.0",    "description": "<p>Renvoi un problème</p>",    "examples": [      {        "title": "Example",        "content": "GET /issues/58b2926f5e1def0789e97281 HTTP/1.1",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"id\": \"58b2926f5e1def0789e97281\",\n   \"status\":\"new\",\n   \"description\": \"Dupo\",\n   \"imageUrl\": \"http://hvdseigneuries.com/wp-content/uploads/2009/02/trouverchatonrect-fb-56e15ff28c6fc.jpg\",\n   \"latitude\": \"-10\",\n   \"longitude\": \"10\",\n   \"tags\": \"hiboux\"\n   \"createdAt\": \"2017-02-28T14:39:14.588Z\",\n   \"createdBy\": \"users/58b573bbfb211b515d79b831\"\n}",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Le statut du problème (ne peut être qu'une de ces quatres valeurs)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>Une description est demandée pour décrire le problème</p>"          },          {            "group": "Response body",            "type": "String",            "optional": true,            "field": "imageUrl",            "description": "<p>L'URL d'une photo du problème</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "latitude",            "description": "<p>L'atitude de la location du problème</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "longitude",            "description": "<p>La longitude de la location du problème</p>"          },          {            "group": "Response body",            "type": "String",            "optional": true,            "field": "tags",            "description": "<p>Les mots clés, afin de trouver plus facilement le type de problème</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "createdBy",            "description": "<p>La personne qui a créé le problème</p>"          },          {            "group": "Response body",            "type": "Date",            "optional": true,            "field": "createdAt",            "description": "<p>La date où le problème a été identifié</p>"          },          {            "group": "Response body",            "type": "Date",            "optional": true,            "field": "updatedAt",            "description": "<p>La date de modification</p>"          },          {            "group": "Response body",            "type": "String",            "optional": true,            "field": "updatedBy",            "description": "<p>La personne qui a modifié le statut</p>"          }        ]      }    },    "filename": "routes/issues.js",    "groupTitle": "Probleme",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>L'identifiant unique d'un problème</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>Aucun problème n'a été trouvé avec l'ID correspond à l'URL</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": " HTTP/1.1 404 Not Found\n Content-Type: text/plain\n\nAucun problème trouvé avec l'ID: 58b2926f5e1def0123e97281",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/issues/:id",    "title": "Mise à jour d'un problème",    "name": "UpdateIssue",    "group": "Probleme",    "version": "1.0.0",    "description": "<p>Remplace les données des problèmes (cette requête doit avec les paramètres complet et être valide)</p>",    "examples": [      {        "title": "Example",        "content": "PUT /issues/58b2926f5e1def0123e97bc0 HTTP/1.1\nContent-Type: application/json\n\n{\n       \"imageUrl\": \"http://i.skyrock.net/8034/92018034/pics/3238631469_1_3_x5cYkxeV.jpg\",\n       \"latitude\": 12,\n       \"longitude\": 150,\n}",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n       \"__v\": 0,\n       \"status\": \"new\",\n       \"description\": \"description de\",\n       \"imageUrl\": \"http://i.skyrock.net/8034/92018034/pics/3238631469_1_3_x5cYkxeV.jpg\",\n       \"latitude\": 12,\n       \"longitude\": 150,\n       \"_id\": \"58b58b9240e6e957f8f1a146\",\n       \"createdAt\": \"2017-02-28T14:39:14.588Z\",\n       \"tags\": [\n         \"hiboux\"\n       ]\n}",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>Le statut du problème (ne peut être qu'une de ces quatres valeurs)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>Une description est demandée pour décrire le problème</p>"          },          {            "group": "Response body",            "type": "String",            "optional": true,            "field": "imageUrl",            "description": "<p>L'URL d'une photo du problème</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "latitude",            "description": "<p>L'atitude de la location du problème</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "longitude",            "description": "<p>La longitude de la location du problème</p>"          },          {            "group": "Response body",            "type": "String",            "optional": true,            "field": "tags",            "description": "<p>Les mots clés, afin de trouver plus facilement le type de problème</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "createdBy",            "description": "<p>La personne qui a créé le problème</p>"          },          {            "group": "Response body",            "type": "Date",            "optional": true,            "field": "createdAt",            "description": "<p>La date où le problème a été identifié</p>"          },          {            "group": "Response body",            "type": "Date",            "optional": true,            "field": "updatedAt",            "description": "<p>La date de modification</p>"          },          {            "group": "Response body",            "type": "String",            "optional": true,            "field": "updatedBy",            "description": "<p>La personne qui a modifié le statut</p>"          }        ]      }    },    "filename": "routes/issues.js",    "groupTitle": "Probleme",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>L'identifiant unique d'un problème</p>"          }        ],        "Request body": [          {            "group": "Request body",            "type": "String",            "allowedValues": [              "\"new\"",              "\"inProgress\"",              "\"canceled\"",              "\"completed\""            ],            "optional": false,            "field": "status",            "description": "<p>Le statut du problème (ne peut être qu'une de ces quatres valeurs)</p>"          },          {            "group": "Request body",            "type": "Number",            "size": "-90..90",            "optional": false,            "field": "latitude",            "description": "<p>L'atitude de la location du problème</p>"          },          {            "group": "Request body",            "type": "Number",            "size": "-180..180",            "optional": false,            "field": "longitude",            "description": "<p>La longitude de la location du problème</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>Aucun problème n'a été trouvé avec l'ID correspond à l'URL</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "422/UnprocessableEntity",            "description": "<p>Certaines propriétés de problème sont invalides.</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": " HTTP/1.1 404 Not Found\n Content-Type: text/plain\n\nAucun problème trouvé avec l'ID: 58b2926f5e1def0123e97281",          "type": "json"        },        {          "title": "422 Unprocessable Entity",          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"Movie validation failed\",\n  \"errors\": {\n    \"title\": {\n      \"kind\": \"minlength\",\n      \"message\": \"Path `title` (`0`) is shorter than the minimum allowed length (3).\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"title\",\n      \"properties\": {\n        \"message\": \"Path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length (3).\",\n        \"minlength\": 3,\n        \"path\": \"title\",\n        \"type\": \"minlength\",\n        \"value\": \"0\"\n      },\n      \"value\": \"0\"\n    }\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/users/:id",    "title": "création de l'utilisateur",    "name": "CreateUser",    "group": "Utilisateur",    "version": "1.0.0",    "description": "<p>Enregistrer un nouvel utilisateur.</p>",    "success": {      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>A unique identifier for the person generated by the server</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>Le prénom de l'utilisateur</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>Le nom de famille de l'utilisateur</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>Définit le rôle de l'utilisateur</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "createdAt",            "description": "<p>La date de création du compte utilisateur (ajout automatique)</p>"          }        ]      },      "examples": [        {          "title": "201 Created",          "content": "HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: https://evening-meadow-25867.herokuapp.com/api/users/58b2926f5e1def0579e97bc0\n\n{\n  \"id\": \"58b2926f5e1def0579e97bc0\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n  \"role\": \"citizen\",\n  \"createdAt\": \"2017-01-01T14:31:87.000Z\"\n}",          "type": "json"        }      ]    },    "examples": [      {        "title": "Example",        "content": "POST /api/users HTTP/1.1\nContent-Type: application/json\n\n{\n  \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n  \"role\": \"citizen\",\n}",        "type": "json"      }    ],    "filename": "routes/users.js",    "groupTitle": "Utilisateur",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "size": "2..20",            "optional": false,            "field": "firstName",            "description": "<p>Le prénom de l'utilisateur (la combinaison du prénom et du nom doit être unique)</p>"          },          {            "group": "Request body",            "type": "String",            "size": "2..20",            "optional": false,            "field": "lastName",            "description": "<p>Le nom de famille de l'utilisateur (la combinaison du prénom et du nom doit être unique)</p>"          },          {            "group": "Request body",            "type": "String",            "allowedValues": [              "\"citizen\"",              "\"manager\""            ],            "optional": false,            "field": "role",            "description": "<p>Définit le rôle de l'utilisateur</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "422/UnprocessableEntity",            "description": "<p>Certaines propriétés de l'utilisateurs sont invalides</p>"          }        ]      },      "examples": [        {          "title": "422 Unprocessable Entity",          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"Person validation failed\",\n  \"errors\": {\n    \"gender\": {\n      \"kind\": \"enum\",\n      \"message\": \"`foo` is not a valid enum value for path `gender`.\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"gender\",\n      \"properties\": {\n        \"enumValues\": [\n          \"male\",\n          \"female\"\n        ],\n        \"message\": \"`{VALUE}` is not a valid enum value for path `{PATH}`.\",\n        \"path\": \"gender\",\n        \"type\": \"enum\",\n        \"value\": \"foo\"\n      },\n      \"value\": \"foo\"\n    }\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "patch",    "url": "/users/:id",    "title": "Apporter une modification partielle sur les données utilisateurs",    "name": "PartiallyUpdateUser",    "group": "Utilisateur",    "version": "1.0.0",    "description": "<p>Apporter une modification partielle sur les données utilisateurs (seuls les propriétés déjà existantes peuvent être modifiées). Toutes les propriétés sont optionnels</p>",    "examples": [      {        "title": "Example",        "content": "PATCH /api/users/58b2926f5e1def0789e97bc0 HTTP/1.1\nContent-Type: application/json\n\n{\n   \"firstName\": \"Johnny\",\n}",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"id\": \"58b2926f5e1def0579e97bc0\",\n     \"firstName\": \"Johnny\",\n     \"lastName\": \"Doe\",\n  \"role\": \"citizen\",\n  \"createdAt\": \"2017-01-01T14:31:87.000Z\"\n}",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>L'identifiant, qui est unique, définit un utilisateur.</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>Le prénom de l'utilisateur</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>Le nom de famille de l'utilisateur</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>Définit le rôle de l'utilisateur</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "createdAt",            "description": "<p>La date de création du compte utilisateur (ajout automatique)</p>"          }        ]      }    },    "filename": "routes/users.js",    "groupTitle": "Utilisateur",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>L'identifiant, qui est unique, définit un utilisateur.</p>"          }        ],        "Request body": [          {            "group": "Request body",            "type": "String",            "size": "2..20",            "optional": false,            "field": "firstName",            "description": "<p>Le prénom de l'utilisateur (la combinaison du prénom et du nom doit être unique)</p>"          },          {            "group": "Request body",            "type": "String",            "size": "2..20",            "optional": false,            "field": "lastName",            "description": "<p>Le nom de famille de l'utilisateur (la combinaison du prénom et du nom doit être unique)</p>"          },          {            "group": "Request body",            "type": "String",            "allowedValues": [              "\"citizen\"",              "\"manager\""            ],            "optional": false,            "field": "role",            "description": "<p>Définit le rôle de l'utilisateur</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>Pas d'utilisateur trouvé</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "422/UnprocessableEntity",            "description": "<p>Certaines propriétés de l'utilisateurs sont invalides</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nAucun utilisateur n'a l'identifiant : 58b2926f5e1def0123e97bc0",          "type": "json"        },        {          "title": "422 Unprocessable Entity",          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"Person validation failed\",\n  \"errors\": {\n    \"gender\": {\n      \"kind\": \"enum\",\n      \"message\": \"`foo` is not a valid enum value for path `gender`.\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"gender\",\n      \"properties\": {\n        \"enumValues\": [\n          \"male\",\n          \"female\"\n        ],\n        \"message\": \"`{VALUE}` is not a valid enum value for path `{PATH}`.\",\n        \"path\": \"gender\",\n        \"type\": \"enum\",\n        \"value\": \"foo\"\n      },\n      \"value\": \"foo\"\n    }\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/users/:id",    "title": "Liste des utilisateurs",    "name": "RetrieveUsers",    "group": "Utilisateur",    "version": "1.0.0",    "description": "<p>Affiche la liste des personnes triées par nom de famille (par ordre alphabétique)</p>",    "parameter": {      "fields": {        "URL query parameters": [          {            "group": "URL query parameters",            "type": "String",            "optional": true,            "field": "role",            "description": "<p>Sélectionne les utilisateurs qui ont un rôle précis</p>"          }        ]      }    },    "examples": [      {        "title": "Example",        "content": "GET /api/users?role=citizen&page=2&pageSize=50 HTTP/1.1",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\nLink: &lt;https://evening-meadow-25867.herokuapp.com/api/users?page=1&pageSize=50&gt;; rel=\"first prev\"\n\n[\n  {\n   \"id\": \"58b2926f5e1def0579e97bc0\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n   \"role\": \"citizen\",\n   \"createdAt\": \"2017-01-01T14:31:87.000Z\"\n  },\n  {\n   \"id\": \"58b58b9240e6e957f8f1a146\",\n   \"firstName\": \"Jean\",\n      \"lastName\": \"Dujardin\",\n    \"role\": \"manager\",\n    \"createdAt\": \"2017-02-04T10:27:65.000Z\"\n  }\n]",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>L'identifiant, qui est unique, définit un utilisateur.</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>Le prénom de l'utilisateur</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>Le nom de famille de l'utilisateur</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>Définit le rôle de l'utilisateur</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "createdAt",            "description": "<p>La date de création du compte utilisateur (ajout automatique)</p>"          }        ]      }    },    "filename": "routes/users.js",    "groupTitle": "Utilisateur"  },  {    "type": "put",    "url": "/users/:id",    "title": "Mettre à jour les données utilisateur",    "name": "UpdateUser",    "group": "Utilisateur",    "version": "1.0.0",    "description": "<p>Remplace les données des personnes (Les données de l'utilisateur doivent être complètes et valides).</p>",    "examples": [      {        "title": "Example",        "content": "PUT /users/58b2926f5e1def0789e97bc0 HTTP/1.1\nContent-Type: application/json\n\n{\n   \"firstName\": \"Danny\",\n      \"lastName\": \"Mendes\",\n      \"role\": \"manager\",\n}",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"id\": \"58b2926f5e1def0579e97bc0\",\n     \"firstName\": \"Danny\",\n     \"lastName\": \"Mendes\",\n  \"role\": \"manager\",\n  \"createdAt\": \"2017-01-01T14:31:87.000Z\"\n}",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>L'identifiant, qui est unique, définit un utilisateur.</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>Le prénom de l'utilisateur</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>Le nom de famille de l'utilisateur</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>Définit le rôle de l'utilisateur</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "createdAt",            "description": "<p>La date de création du compte utilisateur (ajout automatique)</p>"          }        ]      }    },    "filename": "routes/users.js",    "groupTitle": "Utilisateur",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>L'identifiant, qui est unique, définit un utilisateur.</p>"          }        ],        "Request body": [          {            "group": "Request body",            "type": "String",            "size": "2..20",            "optional": false,            "field": "firstName",            "description": "<p>Le prénom de l'utilisateur (la combinaison du prénom et du nom doit être unique)</p>"          },          {            "group": "Request body",            "type": "String",            "size": "2..20",            "optional": false,            "field": "lastName",            "description": "<p>Le nom de famille de l'utilisateur (la combinaison du prénom et du nom doit être unique)</p>"          },          {            "group": "Request body",            "type": "String",            "allowedValues": [              "\"citizen\"",              "\"manager\""            ],            "optional": false,            "field": "role",            "description": "<p>Définit le rôle de l'utilisateur</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>Pas d'utilisateur trouvé</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "422/UnprocessableEntity",            "description": "<p>Certaines propriétés de l'utilisateurs sont invalides</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nAucun utilisateur n'a l'identifiant : 58b2926f5e1def0123e97bc0",          "type": "json"        },        {          "title": "422 Unprocessable Entity",          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"Person validation failed\",\n  \"errors\": {\n    \"gender\": {\n      \"kind\": \"enum\",\n      \"message\": \"`foo` is not a valid enum value for path `gender`.\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"gender\",\n      \"properties\": {\n        \"enumValues\": [\n          \"male\",\n          \"female\"\n        ],\n        \"message\": \"`{VALUE}` is not a valid enum value for path `{PATH}`.\",\n        \"path\": \"gender\",\n        \"type\": \"enum\",\n        \"value\": \"foo\"\n      },\n      \"value\": \"foo\"\n    }\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/users/:id",    "title": "Supprimer un utilisateur",    "name": "DeleteUser",    "group": "utilisateur",    "version": "1.0.0",    "description": "<p>Supprimer définitivement les données utilisateurs</p>",    "examples": [      {        "title": "Example",        "content": "DELETE /users/58b2926f5e1def0789e97bc0 HTTP/1.1",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "204 No Content",          "content": "HTTP/1.1 204 No Content",          "type": "json"        }      ]    },    "filename": "routes/users.js",    "groupTitle": "utilisateur",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>L'identifiant, qui est unique, définit un utilisateur.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>Pas d'utilisateur trouvé</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nAucun utilisateur n'a l'identifiant : 58b2926f5e1def0123e97bc0",          "type": "json"        }      ]    }  }]
