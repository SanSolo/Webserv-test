[  {    "type": "post",    "url": "/users/:id",    "title": "création de l'utilisateur",    "name": "CreateUser",    "group": "Utilisateur",    "version": "1.0.0",    "description": "<p>Enregistrer un nouvel utilisateur.</p>",    "success": {      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>A unique identifier for the person generated by the server</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>Le prénom de l'utilisateur</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>Le nom de famille de l'utilisateur</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>Définit le rôle de l'utilisateur</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "createdAt",            "description": "<p>La date de création du compte utilisateur (ajout automatique)</p>"          }        ]      },      "examples": [        {          "title": "201 Created",          "content": "HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: https://evening-meadow-25867.herokuapp.com/api/users/58b2926f5e1def0579e97bc0\n\n{\n  \"id\": \"58b2926f5e1def0579e97bc0\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n  \"role\": \"citizen\",\n  \"createdAt\": \"2017-01-01T14:31:87.000Z\"\n}",          "type": "json"        }      ]    },    "examples": [      {        "title": "Example",        "content": "POST /api/users HTTP/1.1\nContent-Type: application/json\n\n{\n  \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n  \"role\": \"citizen\",\n}",        "type": "json"      }    ],    "filename": "routes/users.js",    "groupTitle": "Utilisateur",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "size": "2..20",            "optional": false,            "field": "firstName",            "description": "<p>Le prénom de l'utilisateur (la combinaison du prénom et du nom doit être unique)</p>"          },          {            "group": "Request body",            "type": "String",            "size": "2..20",            "optional": false,            "field": "lastName",            "description": "<p>Le nom de famille de l'utilisateur (la combinaison du prénom et du nom doit être unique)</p>"          },          {            "group": "Request body",            "type": "String",            "allowedValues": [              "\"citizen\"",              "\"manager\""            ],            "optional": false,            "field": "role",            "description": "<p>Définit le rôle de l'utilisateur</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "422/UnprocessableEntity",            "description": "<p>Certaines propriétés de l'utilisateurs sont invalides</p>"          }        ]      },      "examples": [        {          "title": "422 Unprocessable Entity",          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"Person validation failed\",\n  \"errors\": {\n    \"gender\": {\n      \"kind\": \"enum\",\n      \"message\": \"`foo` is not a valid enum value for path `gender`.\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"gender\",\n      \"properties\": {\n        \"enumValues\": [\n          \"male\",\n          \"female\"\n        ],\n        \"message\": \"`{VALUE}` is not a valid enum value for path `{PATH}`.\",\n        \"path\": \"gender\",\n        \"type\": \"enum\",\n        \"value\": \"foo\"\n      },\n      \"value\": \"foo\"\n    }\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "patch",    "url": "/users/:id",    "title": "Apporter une modification partielle sur les données utilisateurs",    "name": "PartiallyUpdateUser",    "group": "Utilisateur",    "version": "1.0.0",    "description": "<p>Apporter une modification partielle sur les données utilisateurs (seuls les propriétés déjà existantes peuvent être modifiées). Toutes les propriétés sont optionnels</p>",    "examples": [      {        "title": "Example",        "content": "PATCH /api/users/58b2926f5e1def0789e97bc0 HTTP/1.1\nContent-Type: application/json\n\n{\n   \"firstName\": \"Johnny\",\n}",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"id\": \"58b2926f5e1def0579e97bc0\",\n     \"firstName\": \"Johnny\",\n     \"lastName\": \"Doe\",\n  \"role\": \"citizen\",\n  \"createdAt\": \"2017-01-01T14:31:87.000Z\"\n}",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>L'identifiant, qui est unique, définit un utilisateur.</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>Le prénom de l'utilisateur</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>Le nom de famille de l'utilisateur</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>Définit le rôle de l'utilisateur</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "createdAt",            "description": "<p>La date de création du compte utilisateur (ajout automatique)</p>"          }        ]      }    },    "filename": "routes/users.js",    "groupTitle": "Utilisateur",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>L'identifiant, qui est unique, définit un utilisateur.</p>"          }        ],        "Request body": [          {            "group": "Request body",            "type": "String",            "size": "2..20",            "optional": false,            "field": "firstName",            "description": "<p>Le prénom de l'utilisateur (la combinaison du prénom et du nom doit être unique)</p>"          },          {            "group": "Request body",            "type": "String",            "size": "2..20",            "optional": false,            "field": "lastName",            "description": "<p>Le nom de famille de l'utilisateur (la combinaison du prénom et du nom doit être unique)</p>"          },          {            "group": "Request body",            "type": "String",            "allowedValues": [              "\"citizen\"",              "\"manager\""            ],            "optional": false,            "field": "role",            "description": "<p>Définit le rôle de l'utilisateur</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>Pas d'utilisateur trouvé</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "422/UnprocessableEntity",            "description": "<p>Certaines propriétés de l'utilisateurs sont invalides</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nAucun utilisateur n'a l'identifiant : 58b2926f5e1def0123e97bc0",          "type": "json"        },        {          "title": "422 Unprocessable Entity",          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"Person validation failed\",\n  \"errors\": {\n    \"gender\": {\n      \"kind\": \"enum\",\n      \"message\": \"`foo` is not a valid enum value for path `gender`.\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"gender\",\n      \"properties\": {\n        \"enumValues\": [\n          \"male\",\n          \"female\"\n        ],\n        \"message\": \"`{VALUE}` is not a valid enum value for path `{PATH}`.\",\n        \"path\": \"gender\",\n        \"type\": \"enum\",\n        \"value\": \"foo\"\n      },\n      \"value\": \"foo\"\n    }\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/users/:id",    "title": "Liste des utilisateurs",    "name": "RetrieveUsers",    "group": "Utilisateur",    "version": "1.0.0",    "description": "<p>Affiche la liste des personnes triées par nom de famille (par ordre alphabétique)</p>",    "parameter": {      "fields": {        "URL query parameters": [          {            "group": "URL query parameters",            "type": "String",            "optional": true,            "field": "role",            "description": "<p>Sélectionne les utilisateurs qui ont un rôle précis</p>"          }        ]      }    },    "examples": [      {        "title": "Example",        "content": "GET /api/users?role=citizen&page=2&pageSize=50 HTTP/1.1",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\nLink: &lt;https://evening-meadow-25867.herokuapp.com/api/users?page=1&pageSize=50&gt;; rel=\"first prev\"\n\n[\n  {\n   \"id\": \"58b2926f5e1def0579e97bc0\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n   \"role\": \"citizen\",\n   \"createdAt\": \"2017-01-01T14:31:87.000Z\"\n  },\n  {\n   \"id\": \"58b58b9240e6e957f8f1a146\",\n   \"firstName\": \"Jean\",\n      \"lastName\": \"Dujardin\",\n    \"role\": \"manager\",\n    \"createdAt\": \"2017-02-04T10:27:65.000Z\"\n  }\n]",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>L'identifiant, qui est unique, définit un utilisateur.</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>Le prénom de l'utilisateur</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>Le nom de famille de l'utilisateur</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>Définit le rôle de l'utilisateur</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "createdAt",            "description": "<p>La date de création du compte utilisateur (ajout automatique)</p>"          }        ]      }    },    "filename": "routes/users.js",    "groupTitle": "Utilisateur"  },  {    "type": "put",    "url": "/users/:id",    "title": "Mettre à jour les données utilisateur",    "name": "UpdateUser",    "group": "Utilisateur",    "version": "1.0.0",    "description": "<p>Remplace les données des personnes (Les données de l'utilisateur doivent être complètes et valides).</p>",    "examples": [      {        "title": "Example",        "content": "PUT /users/58b2926f5e1def0789e97bc0 HTTP/1.1\nContent-Type: application/json\n\n{\n   \"firstName\": \"Danny\",\n      \"lastName\": \"Mendes\",\n      \"role\": \"manager\",\n}",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"id\": \"58b2926f5e1def0579e97bc0\",\n     \"firstName\": \"Danny\",\n     \"lastName\": \"Mendes\",\n  \"role\": \"manager\",\n  \"createdAt\": \"2017-01-01T14:31:87.000Z\"\n}",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>L'identifiant, qui est unique, définit un utilisateur.</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>Le prénom de l'utilisateur</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>Le nom de famille de l'utilisateur</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>Définit le rôle de l'utilisateur</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "createdAt",            "description": "<p>La date de création du compte utilisateur (ajout automatique)</p>"          }        ]      }    },    "filename": "routes/users.js",    "groupTitle": "Utilisateur",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>L'identifiant, qui est unique, définit un utilisateur.</p>"          }        ],        "Request body": [          {            "group": "Request body",            "type": "String",            "size": "2..20",            "optional": false,            "field": "firstName",            "description": "<p>Le prénom de l'utilisateur (la combinaison du prénom et du nom doit être unique)</p>"          },          {            "group": "Request body",            "type": "String",            "size": "2..20",            "optional": false,            "field": "lastName",            "description": "<p>Le nom de famille de l'utilisateur (la combinaison du prénom et du nom doit être unique)</p>"          },          {            "group": "Request body",            "type": "String",            "allowedValues": [              "\"citizen\"",              "\"manager\""            ],            "optional": false,            "field": "role",            "description": "<p>Définit le rôle de l'utilisateur</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>Pas d'utilisateur trouvé</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "422/UnprocessableEntity",            "description": "<p>Certaines propriétés de l'utilisateurs sont invalides</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nAucun utilisateur n'a l'identifiant : 58b2926f5e1def0123e97bc0",          "type": "json"        },        {          "title": "422 Unprocessable Entity",          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"Person validation failed\",\n  \"errors\": {\n    \"gender\": {\n      \"kind\": \"enum\",\n      \"message\": \"`foo` is not a valid enum value for path `gender`.\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"gender\",\n      \"properties\": {\n        \"enumValues\": [\n          \"male\",\n          \"female\"\n        ],\n        \"message\": \"`{VALUE}` is not a valid enum value for path `{PATH}`.\",\n        \"path\": \"gender\",\n        \"type\": \"enum\",\n        \"value\": \"foo\"\n      },\n      \"value\": \"foo\"\n    }\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/users/:id",    "title": "Supprimer un utilisateur",    "name": "DeleteUser",    "group": "utilisateur",    "version": "1.0.0",    "description": "<p>Supprimer définitivement les données utilisateurs</p>",    "examples": [      {        "title": "Example",        "content": "DELETE /users/58b2926f5e1def0789e97bc0 HTTP/1.1",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "204 No Content",          "content": "HTTP/1.1 204 No Content",          "type": "json"        }      ]    },    "filename": "routes/users.js",    "groupTitle": "utilisateur",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>L'identifiant, qui est unique, définit un utilisateur.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>Pas d'utilisateur trouvé</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nAucun utilisateur n'a l'identifiant : 58b2926f5e1def0123e97bc0",          "type": "json"        }      ]    }  }]
